// <auto-generated />
using System;
using HotelApp.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelApp.DataAccess.Migrations
{
    [DbContext(typeof(HotelAppDbContext))]
    [Migration("20211202165647_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelApp.Model.Model.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            Description = "This swish uptown hotel on the Upper East side is near the Met, Central Park and lots of upscale shopping in Fifth Avenue.",
                            Name = "The Mark, New York"
                        },
                        new
                        {
                            HotelId = 2,
                            Description = "Right on La Croisette, this gleaming white, art deco icon, plays host to many a celebrity-filled shindig during the Cannes Film Festival.",
                            Name = "Hotel Martinez, Cannes"
                        },
                        new
                        {
                            HotelId = 3,
                            Description = "On its own private, man-made island, with a lovely white sand beach, the resort is accessed by a 300-metre bridge from the mainland.",
                            Name = "BVLGARI Resort & Residences, Dubai"
                        });
                });

            modelBuilder.Entity("HotelApp.Model.Model.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Weeks")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            EndDate = new DateTime(2021, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 1,
                            StartDate = new DateTime(2021, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 7000,
                            UserId = 1,
                            Weeks = 1
                        },
                        new
                        {
                            ReservationId = 2,
                            EndDate = new DateTime(2021, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 2,
                            StartDate = new DateTime(2021, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 28000,
                            UserId = 1,
                            Weeks = 2
                        },
                        new
                        {
                            ReservationId = 3,
                            EndDate = new DateTime(2021, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 3,
                            StartDate = new DateTime(2021, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 21000,
                            UserId = 1,
                            Weeks = 1
                        });
                });

            modelBuilder.Entity("HotelApp.Model.Model.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            HotelId = 1,
                            Price = 1000,
                            Size = "Singelrum"
                        },
                        new
                        {
                            RoomId = 2,
                            HotelId = 1,
                            Price = 2000,
                            Size = "Dubbelrum"
                        },
                        new
                        {
                            RoomId = 3,
                            HotelId = 1,
                            Price = 3000,
                            Size = "Familjerum"
                        },
                        new
                        {
                            RoomId = 4,
                            HotelId = 2,
                            Price = 1000,
                            Size = "Singelrum"
                        },
                        new
                        {
                            RoomId = 5,
                            HotelId = 2,
                            Price = 2000,
                            Size = "Dubbelrum"
                        },
                        new
                        {
                            RoomId = 6,
                            HotelId = 2,
                            Price = 3000,
                            Size = "Familjerum"
                        },
                        new
                        {
                            RoomId = 7,
                            HotelId = 3,
                            Price = 1000,
                            Size = "Singelrum"
                        },
                        new
                        {
                            RoomId = 8,
                            HotelId = 3,
                            Price = 2000,
                            Size = "Dubbelrum"
                        },
                        new
                        {
                            RoomId = 9,
                            HotelId = 3,
                            Price = 3000,
                            Size = "Familjerum"
                        });
                });

            modelBuilder.Entity("HotelApp.Model.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "kalle@gmail.com",
                            FirstName = "Kalle",
                            LastName = "Anka",
                            Password = "hej123"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "fredric@gmail.com",
                            FirstName = "Fredric",
                            LastName = "Fredriksson",
                            Password = "hej123"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "anders@gmail.com",
                            FirstName = "Anders",
                            LastName = "Andersson",
                            Password = "hej123"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "maria@gmail.com",
                            FirstName = "Maria",
                            LastName = "Svensson",
                            Password = "hej123"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "julia@gmail.com",
                            FirstName = "Julia",
                            LastName = "Larsson",
                            Password = "hej123"
                        });
                });

            modelBuilder.Entity("HotelApp.Model.Model.Reservation", b =>
                {
                    b.HasOne("HotelApp.Model.Model.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelApp.Model.Model.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelApp.Model.Model.Room", b =>
                {
                    b.HasOne("HotelApp.Model.Model.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelApp.Model.Model.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HotelApp.Model.Model.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("HotelApp.Model.Model.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
